/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MELD, MELDInterface } from "../MELD";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "BP",
    outputs: [
      {
        internalType: "contract BPContract",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "BPDisabledForever",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "bpEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bp",
        type: "address",
      },
    ],
    name: "setBPAddrss",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "setBpEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBotProtectionDisableForever",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxMints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506122f1806100206000396000f3fe6080604052600436106101ac5760003560e01c80635bdf01c8116100ec5780639cfdbd5e1161008a578063a9059cbb11610064578063a9059cbb1461049d578063c818c280146104bd578063dd62ed3e146104d2578063f2fde38b1461051857600080fd5b80639cfdbd5e1461043c578063a0712d681461045d578063a457c2d71461047d57600080fd5b806379cc6790116100c657806379cc6790146103c05780638129fc1c146103e05780638da5cb5b146103f557806395d89b411461042757600080fd5b80635bdf01c81461036057806370a0823114610375578063715018a6146103ab57600080fd5b806326898da9116101595780633659cfe6116101335780633659cfe6146102ed578063395093511461030d57806342966c681461032d5780634f1ef2861461034d57600080fd5b806326898da91461028d578063313ce567146102af57806334616805146102cb57600080fd5b806318160ddd1161018a57806318160ddd1461022e578063206a8a221461024d57806323b872dd1461026d57600080fd5b806306fdde03146101b1578063095ea7b3146101dc578063113898081461020c575b600080fd5b3480156101bd57600080fd5b506101c6610538565b6040516101d39190611ed0565b60405180910390f35b3480156101e857600080fd5b506101fc6101f7366004611f1f565b6105ca565b60405190151581526020016101d3565b34801561021857600080fd5b5061022c610227366004611f49565b6105e1565b005b34801561023a57600080fd5b506035545b6040519081526020016101d3565b34801561025957600080fd5b5061022c610268366004611f64565b6106ca565b34801561027957600080fd5b506101fc610288366004611f86565b61075e565b34801561029957600080fd5b5061012d546101fc90600160a01b900460ff1681565b3480156102bb57600080fd5b50604051601281526020016101d3565b3480156102d757600080fd5b5061012d546101fc90600160a81b900460ff1681565b3480156102f957600080fd5b5061022c610308366004611f49565b61081f565b34801561031957600080fd5b506101fc610328366004611f1f565b610846565b34801561033957600080fd5b5061022c610348366004611fc2565b610882565b61022c61035b366004611ff1565b61088c565b34801561036c57600080fd5b5061023f6108a5565b34801561038157600080fd5b5061023f610390366004611f49565b6001600160a01b031660009081526033602052604090205490565b3480156103b757600080fd5b5061022c6108c6565b3480156103cc57600080fd5b5061022c6103db366004611f1f565b61092c565b3480156103ec57600080fd5b5061022c6109cb565b34801561040157600080fd5b506065546001600160a01b03165b6040516001600160a01b0390911681526020016101d3565b34801561043357600080fd5b506101c6610b17565b34801561044857600080fd5b5061012d5461040f906001600160a01b031681565b34801561046957600080fd5b5061022c610478366004611fc2565b610b26565b34801561048957600080fd5b506101fc610498366004611f1f565b610c13565b3480156104a957600080fd5b506101fc6104b8366004611f1f565b610cc4565b3480156104c957600080fd5b5061022c610cd1565b3480156104de57600080fd5b5061023f6104ed3660046120b3565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b34801561052457600080fd5b5061022c610533366004611f49565b610d59565b606060368054610547906120e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610573906120e6565b80156105c05780601f10610595576101008083540402835291602001916105c0565b820191906000526020600020905b8154815290600101906020018083116105a357829003601f168201915b5050505050905090565b60006105d7338484610e38565b5060015b92915050565b6065546001600160a01b031633146106405760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61012d546001600160a01b03161561069a5760405162461bcd60e51b815260206004820152601c60248201527f43616e206f6e6c7920626520696e697469616c697a6564206f6e6365000000006044820152606401610637565b61012d805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6065546001600160a01b031633146107245760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610637565b61012d8054911515600160a01b027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b600061076b848484610f90565b6001600160a01b0384166000908152603460209081526040808320338452909152902054828110156108055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e63650000000000000000000000000000000000000000000000006064820152608401610637565b6108128533858403610e38565b60019150505b9392505050565b610828816111b4565b6108438160405180602001604052806000815250600061120e565b50565b3360008181526034602090815260408083206001600160a01b038716845290915281205490916105d791859061087d908690612137565b610e38565b61084333826113d2565b610895826111b4565b6108a18282600161120e565b5050565b60006108b36012600a612233565b6108c1906377359400612242565b905090565b6065546001600160a01b031633146109205760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610637565b61092a6000611563565b565b600061093883336104ed565b9050818110156109af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760448201527f616e6365000000000000000000000000000000000000000000000000000000006064820152608401610637565b6109bc8333848403610e38565b6109c683836113d2565b505050565b600054610100900460ff16806109e4575060005460ff16155b610a475760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610637565b600054610100900460ff16158015610a69576000805461ffff19166101011790555b610add6040518060400160405280600981526020017f4d656c616e642e616900000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4d454c44000000000000000000000000000000000000000000000000000000008152506115c2565b610ae5611688565b610aed61174a565b610af5611688565b61012d805460ff60a81b191690558015610843576000805461ff001916905550565b606060378054610547906120e6565b6065546001600160a01b03163314610b805760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610637565b610b886108a5565b603554610b959083612137565b1115610c095760405162461bcd60e51b815260206004820152602660248201527f4578636565647320746865206d6178696d756d206e756d626572206f66206d6960448201527f6e7461626c6500000000000000000000000000000000000000000000000000006064820152608401610637565b61084333826117f8565b3360009081526034602090815260408083206001600160a01b038616845290915281205482811015610cad5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610637565b610cba3385858403610e38565b5060019392505050565b60006105d7338484610f90565b6065546001600160a01b03163314610d2b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610637565b61012d54600160a81b900460ff1615610d4357600080fd5b61012d805460ff60a81b1916600160a81b179055565b6065546001600160a01b03163314610db35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610637565b6001600160a01b038116610e2f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610637565b61084381611563565b6001600160a01b038316610eb35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610637565b6001600160a01b038216610f2f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610637565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661100c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610637565b6001600160a01b0382166110885760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610637565b6110938383836118e3565b6001600160a01b038316600090815260336020526040902054818110156111225760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610637565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290611159908490612137565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111a591815260200190565b60405180910390a35b50505050565b6065546001600160a01b031633146108435760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610637565b60006112417f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905061124c8461199a565b6000835111806112595750815b1561126a576112688484611a5c565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff166113cb57805460ff191660011781556040516001600160a01b038316602482015261131790869060440160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f3659cfe600000000000000000000000000000000000000000000000000000000179052611a5c565b50805460ff191681557f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b038381169116146113c25760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201527f75727468657220757067726164657300000000000000000000000000000000006064820152608401610637565b6113cb85611b5e565b5050505050565b6001600160a01b03821661144e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610637565b61145a826000836118e3565b6001600160a01b038216600090815260336020526040902054818110156114e95760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610637565b6001600160a01b0383166000908152603360205260408120838303905560358054849290611518908490612261565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b606580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16806115db575060005460ff16155b61163e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610637565b600054610100900460ff16158015611660576000805461ffff19166101011790555b611668611b9e565b6116728383611c4f565b80156109c6576000805461ff0019169055505050565b600054610100900460ff16806116a1575060005460ff16155b6117045760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610637565b600054610100900460ff16158015611726576000805461ffff19166101011790555b61172e611b9e565b611736611b9e565b8015610843576000805461ff001916905550565b600054610100900460ff1680611763575060005460ff16155b6117c65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610637565b600054610100900460ff161580156117e8576000805461ffff19166101011790555b6117f0611b9e565b611736611d2b565b6001600160a01b03821661184e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610637565b61185a600083836118e3565b806035600082825461186c9190612137565b90915550506001600160a01b03821660009081526033602052604081208054839290611899908490612137565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b61012d54600160a01b900460ff168015611908575061012d54600160a81b900460ff16155b156109c65761012d546040517f7e2f3afd0000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015284811660248301526044820184905290911690637e2f3afd90606401600060405180830381600087803b15801561197d57600080fd5b505af1158015611991573d6000803e3d6000fd5b50505050505050565b803b611a0e5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610637565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6060823b611ad25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610637565b600080846001600160a01b031684604051611aed9190612278565b600060405180830381855af49150503d8060008114611b28576040519150601f19603f3d011682016040523d82523d6000602084013e611b2d565b606091505b5091509150611b55828260405180606001604052806027815260200161229560279139611dd2565b95945050505050565b611b678161199a565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600054610100900460ff1680611bb7575060005460ff16155b611c1a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610637565b600054610100900460ff16158015611736576000805461ffff19166101011790558015610843576000805461ff001916905550565b600054610100900460ff1680611c68575060005460ff16155b611ccb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610637565b600054610100900460ff16158015611ced576000805461ffff19166101011790555b8251611d00906036906020860190611e0b565b508151611d14906037906020850190611e0b565b5080156109c6576000805461ff0019169055505050565b600054610100900460ff1680611d44575060005460ff16155b611da75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610637565b600054610100900460ff16158015611dc9576000805461ffff19166101011790555b61173633611563565b60608315611de1575081610818565b825115611df15782518084602001fd5b8160405162461bcd60e51b81526004016106379190611ed0565b828054611e17906120e6565b90600052602060002090601f016020900481019282611e395760008555611e7f565b82601f10611e5257805160ff1916838001178555611e7f565b82800160010185558215611e7f579182015b82811115611e7f578251825591602001919060010190611e64565b50611e8b929150611e8f565b5090565b5b80821115611e8b5760008155600101611e90565b60005b83811015611ebf578181015183820152602001611ea7565b838111156111ae5750506000910152565b6020815260008251806020840152611eef816040850160208701611ea4565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611f1a57600080fd5b919050565b60008060408385031215611f3257600080fd5b611f3b83611f03565b946020939093013593505050565b600060208284031215611f5b57600080fd5b61081882611f03565b600060208284031215611f7657600080fd5b8135801515811461081857600080fd5b600080600060608486031215611f9b57600080fd5b611fa484611f03565b9250611fb260208501611f03565b9150604084013590509250925092565b600060208284031215611fd457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561200457600080fd5b61200d83611f03565b9150602083013567ffffffffffffffff8082111561202a57600080fd5b818501915085601f83011261203e57600080fd5b81358181111561205057612050611fdb565b604051601f8201601f19908116603f0116810190838211818310171561207857612078611fdb565b8160405282815288602084870101111561209157600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080604083850312156120c657600080fd5b6120cf83611f03565b91506120dd60208401611f03565b90509250929050565b600181811c908216806120fa57607f821691505b6020821081141561211b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561214a5761214a612121565b500190565b600181815b8085111561218a57816000190482111561217057612170612121565b8085161561217d57918102915b93841c9390800290612154565b509250929050565b6000826121a1575060016105db565b816121ae575060006105db565b81600181146121c457600281146121ce576121ea565b60019150506105db565b60ff8411156121df576121df612121565b50506001821b6105db565b5060208310610133831016604e8410600b841016171561220d575081810a6105db565b612217838361214f565b806000190482111561222b5761222b612121565b029392505050565b600061081860ff841683612192565b600081600019048311821515161561225c5761225c612121565b500290565b60008282101561227357612273612121565b500390565b6000825161228a818460208701611ea4565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122029aee2a7a097c4b1e1adac697127bef201bdab14d0e51b4d0757c5fe7ea66aef64736f6c63430008090033";

export class MELD__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MELD> {
    return super.deploy(overrides || {}) as Promise<MELD>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MELD {
    return super.attach(address) as MELD;
  }
  connect(signer: Signer): MELD__factory {
    return super.connect(signer) as MELD__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MELDInterface {
    return new utils.Interface(_abi) as MELDInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MELD {
    return new Contract(address, _abi, signerOrProvider) as MELD;
  }
}
