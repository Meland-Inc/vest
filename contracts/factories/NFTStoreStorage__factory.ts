/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTStoreStorage,
  NFTStoreStorageInterface,
} from "../NFTStoreStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "ownerCutPerMillion",
        type: "uint256",
      },
    ],
    name: "ChangedOwnerCutPerMillion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC721MelandNFT",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "priceInWei",
        type: "uint256",
      },
    ],
    name: "NFTBuyed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC721MelandNFT",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "priceInWei",
        type: "uint256",
      },
    ],
    name: "NFTCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC721MelandNFT",
        name: "nftAddress",
        type: "address",
      },
    ],
    name: "NFTDelete",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "contract IERC721MelandNFT",
        name: "nft",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "NFTIdPoolUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "contract IERC721MelandNFT",
        name: "nftAddress",
        type: "address",
      },
    ],
    name: "NFTItemUpdate",
    type: "event",
  },
  {
    inputs: [],
    name: "GM_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptedToken",
    outputs: [
      {
        internalType: "contract IERC20MELD",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "foundationWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721MelandNFT",
        name: "",
        type: "address",
      },
    ],
    name: "itemByNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "tokenIdPool",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "priceInWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellsCount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "limit",
        type: "uint32",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721MelandNFT",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "limitPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "nftByCid",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "officialWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerCutPerMillion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721MelandNFT",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenIdsByNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105d5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806380b7613c11610081578063b83fe3011161005b578063b83fe301146101c6578063d5391393146101fa578063f72c0d8b1461022157600080fd5b806380b7613c1461017f578063a01f79d4146101aa578063ac54242d146101b357600080fd5b8063451c3d80116100b2578063451c3d801461013357806366b61640146101465780636b7ae8dc1461016c57600080fd5b8063088025d3146100ce57806330c7be2c146100fe575b600080fd5b6002546100e1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101257ff5eb84615c2a00ecaf817d13794ebd6299c9e01c395bf4018453f13f577f544981565b6040519081526020016100f5565b6000546100e1906001600160a01b031681565b610159610154366004610380565b610248565b6040516100f597969594939291906103a4565b6001546100e1906001600160a01b031681565b61012561018d366004610438565b600660209081526000928352604080842090915290825290205481565b61012560075481565b6101256101c1366004610471565b610337565b6100e16101d43660046104b3565b80516020818301810180516005825292820191909301209152546001600160a01b031681565b6101257f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6101257f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b600360208190526000918252604090912080546001820154600283015493830154600484015460058501805494966001600160a01b038516967401000000000000000000000000000000000000000090950460ff1695909463ffffffff9093169291906102b490610564565b80601f01602080910402602001604051908101604052809291908181526020018280546102e090610564565b801561032d5780601f106103025761010080835404028352916020019161032d565b820191906000526020600020905b81548152906001019060200180831161031057829003601f168201915b5050505050905087565b6004602052816000526040600020818154811061035357600080fd5b90600052602060002001600091509150505481565b6001600160a01b038116811461037d57600080fd5b50565b60006020828403121561039257600080fd5b813561039d81610368565b9392505050565b878152600060206001600160a01b03891681840152871515604084015286606084015285608084015263ffffffff851660a084015260e060c084015283518060e085015260005b8181101561040857858101830151858201610100015282016103eb565b8181111561041b57600061010083870101525b50601f01601f191692909201610100019998505050505050505050565b6000806040838503121561044b57600080fd5b823561045681610368565b9150602083013561046681610368565b809150509250929050565b6000806040838503121561048457600080fd5b823561048f81610368565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156104c557600080fd5b813567ffffffffffffffff808211156104dd57600080fd5b818401915084601f8301126104f157600080fd5b8135818111156105035761050361049d565b604051601f8201601f19908116603f0116810190838211818310171561052b5761052b61049d565b8160405282815287602084870101111561054457600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c9082168061057857607f821691505b6020821081141561059957634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212202d6e93b279cb1345b54b06e72d6074519e3359b8fd62b3b032f40058e8b30d7664736f6c63430008090033";

export class NFTStoreStorage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTStoreStorage> {
    return super.deploy(overrides || {}) as Promise<NFTStoreStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTStoreStorage {
    return super.attach(address) as NFTStoreStorage;
  }
  connect(signer: Signer): NFTStoreStorage__factory {
    return super.connect(signer) as NFTStoreStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTStoreStorageInterface {
    return new utils.Interface(_abi) as NFTStoreStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTStoreStorage {
    return new Contract(address, _abi, signerOrProvider) as NFTStoreStorage;
  }
}
